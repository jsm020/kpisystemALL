"""
Django settings for base project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
from dotenv import load_dotenv

load_dotenv()

SECRET_KEY = os.getenv('SECRET_KEY')


from pathlib import Path
import os
from django.contrib.messages import constants as messages

MESSAGE_TAGS = {
    messages.ERROR: 'danger',  # Error xabari uchun 'danger' CSS class
}

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv('DEBUG') == 'True'
ALLOWED_HOSTS = ['*']

SECURE_SSL_REDIRECT = True  # HTTP so'rovlarni avtomatik HTTPS ga yo'naltirish
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')  # Nginx yoki boshqa serverlar orqali HTTPS ishlashi uchun
CSRF_COOKIE_SECURE = True  # CSRF cookie'ni faqat HTTPS orqali yuborish
SESSION_COOKIE_SECURE = True  # Session cookie'ni faqat HTTPS orqali yuborish
BASE_URL = os.getenv('BASE_URL')

# Application definition

INSTALLED_APPS = [
    "jazzmin",
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'mainSystem'
]

MIDDLEWARE = [

    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'base.urls'
AUTHENTICATION_BACKENDS = ['django.contrib.auth.backends.ModelBackend']

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],  # O'zingizning shablon papkangiz yo'li
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


WSGI_APPLICATION = 'base.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv('DB_NAME'),
        'USER': os.getenv('DB_USER'),
        'PASSWORD': os.getenv('DB_PASSWORD'),
        'HOST': os.getenv('DB_HOST'),
        'PORT': os.getenv('DB_PORT'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Tashkent'

USE_I18N = True

USE_L10N = True

USE_TZ = True
AUTH_USER_MODEL = 'mainSystem.CustomUser'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
JAZZMIN_SETTINGS = {
    # Sidebar customization
    "show_sidebar": True,
    "navigation_expanded": True,  # Sidebar expanded by default
    "hide_apps": ['auth'],  # Apps you want to hide
    "hide_models": ["auth.Group"],  # Hide certain models
    "order_with_respect_to": ["myapp", "auth"],  # Reorder the apps and models

    "custom_links": {
        "myapp": [
            {
                "name": "Dashboard",
                "url": "admin:index",
                "icon": "fas fa-chart-line",
                "permissions": ["auth.view_user"]
            }
        ]
    },
    "icons": {
        "auth": "fas fa-users-cog",
        "myapp.ModelName": "fas fa-book",
    }
}
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
STATIC_URL = '/static/'

if DEBUG:
# Statik fayllar manbalari, odatda loyihaning qo'shimcha statik fayllari
    STATICFILES_DIRS = [
        os.path.join(BASE_DIR, 'static'),  # Bu sizning loyihangizning qo'shimcha statik fayllari (masalan, frontendning CSS, JS fayllari).
    ]
else:
    STATIC_ROOT = os.path.join(BASE_DIR, 'static')

# Bu statik fayllarni yig'iladigan yakuniy papka, collectstatic bu yerga nusxa ko'chiradi

# Define additional locations for static files

LOGIN_REDIRECT_URL = 'home'  # Login bo'lgandan keyin asosiy sahifaga yo'naltirish
LOGOUT_REDIRECT_URL = 'login'  # Logoutdan keyin login sahifasiga yo'naltirish
LOGIN_URL = 'login'  # Foydalanuvchi login qilmagan holda login sahifasiga yo'naltiriladi
# settings.py faylida
